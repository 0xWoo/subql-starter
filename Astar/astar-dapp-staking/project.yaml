specVersion: 1.0.0
name: astar-starter
version: 0.0.1
runner:
  node:
    name: "@subql/node"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: This SubQuery project can be use as a starting point for Astar network
repository: "https://github.com/subquery/astar-subql-starters"
schema:
  file: ./schema.graphql
network:
  # The genesis hash of the network (hash of block 0)
  chainId: "0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"
  # This endpoint must be a public non-pruned archive node
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  # You can get them from OnFinality for free https://app.onfinality.io
  # https://documentation.onfinality.io/support/the-enhanced-api-service
  endpoint: "wss://astar.api.onfinality.io/public-wss"
  # Optionally provide the HTTP endpoint of a full chain dictionary to speed up processing
  dictionary: "https://api.subquery.network/sq/subquery/astar-dictionary"
  chaintypes:
    file: ./dist/chaintypes.js
dataSources:
  - kind: substrate/Runtime
    startBlock: 1
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleNewContract
          kind: substrate/EventHandler
          filter:
            module: dappsStaking
            method: NewContract
        - handler: handleBondAndStake
          kind: substrate/EventHandler
          filter:
            module: dappsStaking
            method: BondAndStake
        - handler: handleUnbondAndUnstake
          kind: substrate/EventHandler
          filter:
            module: dappsStaking
            method: UnbondAndUnstake
        - handler: handleReward
          kind: substrate/EventHandler
          filter:
            module: dappsStaking
            method: Reward
